#!/bin/bash
{
	#////////////////////////////////////
	# DietPi RAMLOG Script
	#
	#////////////////////////////////////
	# Created by Daniel Knight / daniel.knight@dietpi.com / dietpi.com
	#
	#////////////////////////////////////
	#
	# Info:
	# - /var/log is mounted as tmpfs (RAMdisk) before this script runs.
	# - Saves /var/log/* attributes and ownerships to $FP_STORE during shutdown
	# - Restores /var/log/* atrributes and ownerships from $FP_STORE during boot
	# - This allows us to vastly reduce filesystem I/O and increase logging performance
	#
	# Usage:
	# - /DietPi/dietpi/func/dietpi-ramlog 0		= Restore from $FP_STORE to /var/log
	# - /DietPi/dietpi/func/dietpi-ramlog 1		= Store from /var/log to $FP_STORE
	#////////////////////////////////////

	#-------------------------------------------------------------------------------------
	#. /DietPi/dietpi/func/dietpi-globals	# Not compatible until DietPi-PreBoot has finished and overkill for the purpose of this script.
	#export LC_ALL=en_GB.UTF-8		# Not required, as we do not parse any external command and "date" is allowed to be in user locale format.
	#cd $HOME				# Not required, as we do not create any tmp files and produces and: "cd: HOME not set"
	#-------------------------------------------------------------------------------------

	[[ $1 =~ ^-?[0-9]+$ ]] && INPUT=$1 || INPUT=-1

	EXIT_CODE=0

	PROGRAM_NAME='DietPi-RAMlog'
	FP_STORE='/var/tmp/dietpi/logs/dietpi-ramlog_store'

	#/////////////////////////////////////////////////////////////////////////////////////
	# Main Loop
	#/////////////////////////////////////////////////////////////////////////////////////

	# Startup phase: Restore from disk
	if (( $INPUT == 0 )); then

		echo "$(date) | $PROGRAM_NAME: Restoring logs from disk..."

		if [[ -d $FP_STORE ]]; then

			# - Restore empty logs with ownership and permissions from disk
			cp -an --attributes-only $FP_STORE/. /var/log/ || EXIT_CODE=$?

			if (( $EXIT_CODE )); then

				echo "$(date) | $PROGRAM_NAME: [ERROR] Restoring logs from disk failed with exit code: $EXIT_CODE"

			else

				echo "$(date) | $PROGRAM_NAME: Restored logs from disk."

			fi

		else

			echo "$(date) | $PROGRAM_NAME: No logs found on disk. Aborting..."

		fi

	# Shutdown phase: Store to disk
	elif (( $INPUT == 1 )); then

		echo "$(date) | $PROGRAM_NAME: Storing logs to disk..."

		# - Assure empty $FP_STORE
		[[ -d $FP_STORE ]] && rm -Rf $FP_STORE/{,.??,.[^.]}* || mkdir -p $FP_STORE || EXIT_CODE=$?

		# - Store empty logs with ownership and permissions to disk
		cp -af --attributes-only /var/log/. $FP_STORE/ || EXIT_CODE=$?

		if (( $EXIT_CODE )); then

			echo "$(date) | $PROGRAM_NAME: [ERROR] Storing logs to disk failed with exit code: $EXIT_CODE"

		else

			echo "$(date) | $PROGRAM_NAME: Stored logs to disk."

		fi

	else

		echo "$(date) | $PROGRAM_NAME: [ERROR] Unknown argument: $INPUT. Aborting..."
		EXIT_CODE=1

	fi

	#-----------------------------------------------------------------------------------
	exit $EXIT_CODE
	#-----------------------------------------------------------------------------------
}
